{"version":3,"sources":["context/Context.js","containers/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["DashboardContext","React","createContext","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","appBar","display","justifyContent","flexDirection","alignItems","padding","spacing","header","grey","color","common","black","marginTop","headerItem","headerIcon","primary","main","headerTitle","textTransform","divider","height","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","scanners","item","vulnerabilitiesItem","high","error","dark","paddingLeft","medium","warning","low","success","info","fontWeightBold","generateId","Math","floor","random","TabPanel","props","children","value","index","role","hidden","id","aria-labelledby","key","Fragment","Dashboard","classes","data","useContext","infoIcons","highRiskIcon","mediumRiskIcon","lowRiskIcon","infoRiskIcon","breakers","useState","showId","setShowId","setValue","capitalizeFirstLetter","string","charAt","toUpperCase","slice","replace","trim","listItemsGenerator","itemName","itemIcon","className","displayVulnerabilityIcon","risk","AppBar","position","leftContainer","Tabs","onChange","event","newValue","aria-label","Tab","label","rightContainer","FormControlLabel","control","Switch","checked","name","Paper","undefined","user","source","personalDetails","notifications","Object","entries","values","map","i","push","messageItem","toString","dateItem","format","Date","Divider","personalDetailsItem","userDataLoop","scan","scanOverview","severityCounts","assets","vulnerabilities","scanner","scannersItem","val","severityItem","asset","assetsItem","affectedAssets","includes","scanOverviewItem","resultsLoop","App","pulledData","setPulledData","useEffect","fetch","then","res","json","response","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d57e0ff4.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const DashboardContext = React.createContext(); // dashboard context","import React, { useContext, useState } from 'react';\nimport { DashboardContext } from '../context/Context';\nimport PropTypes from 'prop-types';\n// Date Fns\nimport { format } from 'date-fns';\n// Material UI elements\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n// Icons\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MessageIcon from '@material-ui/icons/Message';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport BuildIcon from '@material-ui/icons/Build';\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  paper: {\n    padding: theme.spacing(4),\n  },\n  header: {\n    backgroundColor: theme.palette.grey[300],\n    color: theme.palette.common.black,\n    marginTop: theme.spacing(4)\n  },\n  headerItem: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(1),\n    alignItems: 'center'\n  },\n  headerIcon: {\n    padding: theme.spacing(1),\n    color: theme.palette.primary.main\n  },\n  headerTitle: {\n    textTransform: 'uppercase'\n  },\n  divider: {\n    height: theme.spacing(5),\n    backgroundColor: theme.palette.grey[100]\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  scanners: {\n    backgroundColor: theme.palette.grey[100],\n  },\n  item: {\n    backgroundColor: theme.palette.grey[100],\n    padding: `${theme.spacing()}px ${theme.spacing(2)}px `\n  },\n  vulnerabilitiesItem: {\n    backgroundColor: theme.palette.grey[100]\n  },\n  high: {\n    color: theme.palette.error.dark,\n    paddingLeft: theme.spacing(1)\n  },\n  medium: {\n    color: theme.palette.warning.dark,\n    paddingLeft: theme.spacing(1)\n  },\n  low: {\n    color: theme.palette.success.dark,\n    paddingLeft: theme.spacing(1)\n  },\n  info: {\n    color: theme.palette.info.dark,\n    paddingLeft: theme.spacing(1)\n  },\n  fontWeightBold: {\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\n// Generate Id for keys\nfunction generateId() {\n  return Math.floor((Math.random() * 1000000000) + 1);\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      key={generateId()}\n    >\n      {value === index && (\n        <React.Fragment key={generateId()}>{children}</React.Fragment>\n      )}\n    </div>\n  );\n}\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const data = useContext(DashboardContext);\n  const infoIcons = {\n    highRiskIcon: <WarningIcon />,\n    mediumRiskIcon: <WarningIcon />,\n    lowRiskIcon: <WarningIcon />,\n    infoRiskIcon: <InfoIcon />\n  }\n  const breakers = ['description', 'solution', 'references'];\n\n  const [showId, setShowId] = useState(false);\n\n  const toggle = () => {\n    setShowId(!showId)\n  }\n\n  // Tabs\n  const [value, setValue] = React.useState(1);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // Capitalise and add space to strings\n  function capitalizeFirstLetter(string) {\n    return (string.charAt(0).toUpperCase() + string.slice(1)).replace(/([A-Z])/g, ' $1').trim();\n  }\n\n  // Generate a list item with a custom icon and custom header\n  function listItemsGenerator(itemName, itemIcon) {\n    return (\n      <div className={classes.header} key={generateId()} >\n        <div className={classes.headerItem}>\n          <span className={classes.headerIcon}>{itemIcon}</span>\n          <div className={classes.headerTitle}>{itemName}</div>\n        </div>\n      </div>\n    )\n  }\n\n  function displayVulnerabilityIcon(risk) {\n\n    // Example use of Destructuring\n    const { highRiskIcon } = infoIcons;\n    const { mediumRiskIcon } = infoIcons;\n    const { lowRiskIcon } = infoIcons;\n    const { infoRiskIcon } = infoIcons;\n\n    switch (risk) {\n      case 'high':\n        return <span className={classes.high}>{highRiskIcon}</span>\n      case 'medium':\n        return <span className={classes.medium}>{mediumRiskIcon}</span>\n      case 'low':\n        return <span className={classes.low}>{lowRiskIcon}</span>\n      case 'information':\n        return <span className={classes.info}>{infoRiskIcon}</span>\n      default:\n        return null\n    }\n  }\n\n\n  // User Information Data Loop\n  const userDataLoop = () => {\n    if (data.user !== undefined) {\n\n      let source = data.user;\n      let personalDetails = [listItemsGenerator('User Details', <AccountCircleIcon />)];\n      let notifications = [listItemsGenerator('Notifications', <MessageIcon />)];\n\n      for (const [key, value] of Object.entries(source)) {\n        if (key === 'notifications') {\n\n          Object.values(source.notifications).map(i => {\n            for (const [key, value] of Object.entries(i)) {\n              if (key === 'read') {\n                notifications.push(\n                  <div className={classes.messageItem} key={generateId()}>\n                    <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value.toString()}</div>\n                  </div>\n                )\n              } else if (key === 'id') {\n                showId && (\n                  notifications.push(\n                    <div className={classes.messageItem} key={generateId()}>\n                      <div className={classes.item} ><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value.toString()}</div>\n                    </div>\n                  )\n                )\n              } else if (key === 'date') {\n                notifications.push(\n                  <div className={classes.dateItem} key={generateId()}>\n                    <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {format(new Date(value), 'MM/dd/yyyy')}</div>\n                  </div>\n                )\n                notifications.push(<Divider className={classes.divider} key={generateId()} />)\n              } else {\n                notifications.push(\n                  <div className={classes.dateItem} key={generateId()}>\n                    <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value}</div>\n                  </div>\n                )\n              }\n            }\n          })\n        } else {\n          personalDetails.push(\n            <div className={classes.personalDetailsItem} key={generateId()}>\n              <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value}</div>\n            </div>\n          )\n        }\n      }\n      return [personalDetails, notifications];\n    }\n  }\n\n  // Scan Data Loop\n  const resultsLoop = () => {\n    if (data.scan !== undefined) {\n      let source = data.scan;\n      let scanOverview = [listItemsGenerator('Scan Overview', <SearchIcon />)];\n      let scanners = [listItemsGenerator('Used Scanners', <BuildIcon />)];\n      let severityCounts = [listItemsGenerator('Severity of Items', <BugReportIcon />)];\n      let assets = [listItemsGenerator('Assets', <DevicesIcon />)];\n      let vulnerabilities = [listItemsGenerator('Vulnerabilities', <SecurityIcon />)];\n\n      for (const [key, value] of Object.entries(source)) {\n        // Example of use for Switch\n        switch (key) {\n          case 'scanners':\n            value.map(scanner => {\n              return scanners.push(\n                <div className={classes.scannersItem} key={generateId()}>\n                  <div className={classes.item}><span className={classes.fontWeightBold}>{scanner}</span></div>\n                </div>\n              )\n            })\n            break;\n          case 'severityCounts':\n            for (const [item, val] of Object.entries(value)) {\n              severityCounts.push(\n                <div className={classes.severityItem} key={generateId()}>\n                  <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(item)}</span>: {val}</div>\n                </div>\n              )\n            }\n            break;\n          case 'assets':\n            value.map(asset => {\n              for (const [key, value] of Object.entries(asset)) {\n                if (key === 'created') {\n                  assets.push(\n                    <div className={classes.assetsItem} key={generateId()}>\n                      <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {format(new Date(value), 'MM/dd/yyyy')}</div>\n                    </div>\n                  )\n                } else if (key === 'id') {\n                  showId && (\n                    assets.push(\n                      <div className={classes.assetsItem} key={generateId()}>\n                        <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {format(new Date(value), 'MM/dd/yyyy')}</div>\n                      </div>\n                    )\n                  )\n                } else {\n                  assets.push(\n                    <div className={classes.assetsItem} key={generateId()}>\n                      <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value}</div>\n                    </div>\n                  )\n                }\n\n              }\n              assets.push(<Divider className={classes.divider} key={generateId()} />)\n            })\n            break;\n          case 'vulnerabilities':\n            value.map(asset => {\n              for (const [key, value] of Object.entries(asset)) {\n                if (key === 'affectedAssets') {\n                  value.map(affectedAssets => {\n                    return (\n                      vulnerabilities.push(\n                        <div className={classes.vulnerabilitiesItem} key={generateId()}>\n                          <div className={classes.item}><span className={classes.fontWeightBold}>Affected Asset</span>: {affectedAssets}</div>\n                        </div>\n                      )\n                    )\n                  })\n                  vulnerabilities.push(<div className={classes.divider} key={generateId()} />)\n                } else if (key === 'id') {\n                  showId && (\n                    vulnerabilities.push(\n                      <div className={classes.vulnerabilitiesItem} key={generateId()}>\n                        <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value}</div>\n                      </div>\n                    )\n                  )\n                } else {\n                  vulnerabilities.push(\n                    <div className={classes.vulnerabilitiesItem} key={generateId()}>\n                      <div className={classes.item} >\n                        <span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>:\n                        {/* Example use of includes */}\n                        {breakers.includes(key) && <br />}  {value} {displayVulnerabilityIcon(value)}\n                      </div>\n                    </div>\n                  )\n                }\n              }\n            })\n            break;\n          default:\n            // Usage example for ternary and pipe opperator with Date FNS\n            (key === 'dateStarted' || key === 'datCompleted') ?\n              scanOverview.push(\n                <div className={classes.scanOverviewItem} key={generateId()}>\n                  <div className={classes.item} ><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {format(new Date(value), 'MM/dd/yyyy')}</div>\n                </div>\n              )\n              :\n              scanOverview.push(\n                <div className={classes.scanOverviewItem} key={generateId()}>\n                  <div className={classes.item}><span className={classes.fontWeightBold}>{capitalizeFirstLetter(key)}</span>: {value}</div>\n                </div>\n              )\n        }\n      }\n      return [scanOverview, scanners, severityCounts, assets, vulnerabilities]\n    }\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n\n          <div className={classes.leftContainer}>\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs\">\n              <Tab label=\"User Data\" />\n              <Tab label=\"Scan Data\" />\n            </Tabs>\n          </div>\n          <div className={classes.rightContainer}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showId}\n                  onChange={toggle}\n                  name=\"ShowId\"\n                />\n              }\n              label=\"Display Ids\"\n            />\n          </div>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Paper className={classes.paper}>\n            {userDataLoop()}\n          </Paper>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Paper className={classes.paper}>\n            {resultsLoop()}\n          </Paper>\n        </TabPanel>\n      </div>\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\n\nexport default Dashboard;\n\n\n","import React, { useEffect } from 'react';\nimport { DashboardContext } from \"./context/Context\";\n\n// Containers\nimport Dashboard from './containers/Dashboard';\n\n\nfunction App() {\n  const [pulledData, setPulledData] = React.useState({});\n\n  const callAPI = () => {\n    fetch(\"http://localhost:4000/results\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((response) => {\n        setPulledData(response);\n      });\n  };\n\n  useEffect(() => {\n    callAPI()\n  }, []);\n\n  if (pulledData !== {}) {\n    return (\n      <DashboardContext.Provider value={pulledData}>\n        <Dashboard />\n      </DashboardContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}